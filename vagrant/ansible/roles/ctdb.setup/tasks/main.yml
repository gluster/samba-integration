---
- name: Check for required variables
  block:
    - fail:
        msg: "Please provide required variable: ctdb_network_private_interfaces"
      when: ctdb_network_private_interfaces is undefined
    - fail:
        msg: "Please provide these required variable: ctdb_network_public_interfaces"
      when: ctdb_network_public_interfaces is undefined
    - fail:
        msg: "Please provide these required variable: ctdb_network_public_interface_subnet_mask"
      when: ctdb_network_public_interface_subnet_mask is undefined
    - fail:
        msg: "Please provide these required variable: ctdb_network_public_interface_name"
      when: ctdb_network_public_interface_name is undefined
    - fail:
        msg: "Please provide these required variable: ctdb_glusterfs_volume"
      when: ctdb_glusterfs_volume is undefined

- name: Create the ctdb replicated volume
  gluster_volume:
    state: present
    name: "{{ ctdb_glusterfs_volume }}"
    bricks: '{{ ctdb_brick_location }}/ctdb'
    cluster: "{{ gluster_cluster_hosts }}"
    replicas: "{{ gluster_cluster_replica_count }}"
  run_once: yes

- name: Add ctdb package
  yum:
    name: ctdb
    state: present

- name: Add ctdb rules to firewalld
  firewalld:
    service: ctdb
    permanent: yes
    state: present
    state: enabled

- name: Add recovery lock to ctdb.conf
  lineinfile:
    dest: /etc/ctdb/ctdb.conf
    line: "\trecovery lock = /gluster/lock/recovery.lock"
    regexp: "recovery lock"
    insertafter: '\[cluster\]'

# Check bz 1656777
- name: Temporary workaround the bugs in the ctdb package provided with centos 7.
  block:
    - name: Create missing directories for ctdb package
      file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
      with_items:
        - /etc/ctdb/events/legacy
        - /var/lib/ctdb/state
        - /var/lib/ctdb/persistent/
        - /var/lib/ctdb/volatile/

    - name: Apply SELinux file context to new directories
      command: restorecon -irv /etc/ctdb/events/legacy /var/lib/ctdb/state

    - name: Put SELinux in permissive mode, logging actions that would be blocked.
      selinux:
        policy: targeted
        state: permissive

    - name: Enable check consistency of databases during startup
      command: '/bin/ctdb event script enable legacy 00.ctdb'

    - name: Enable check consistency of databases during startup
      command: '/bin/ctdb event script enable legacy 01.reclock'

    - name: Enable monitor system resources
      command: '/bin/ctdb event script enable legacy 05.system'

    - name: Enable network interface management by ctdb
      command: '/bin/ctdb event script enable legacy 10.interface'

    - name: Enable samba management by ctdb
      command: '/bin/ctdb event script enable legacy 50.samba'

- include_role:
    name: gluster.features
  vars:
    gluster_features_ctdb_nodes: "{{ ctdb_network_private_interfaces | join(',') }}"
    gluster_features_ctdb_publicaddr: "{{ ctdb_network_public_interfaces | map('regex_replace','(^.*$)','\\1/' + ctdb_network_public_interface_subnet_mask + ' ' + ctdb_network_public_interface_name) | list |join (',') }}"
    gluster_features_ctdb_volume: "{{ ctdb_glusterfs_volume }}"

- name: Restart ctdb
  service: name=ctdb state=restarted enabled=yes
