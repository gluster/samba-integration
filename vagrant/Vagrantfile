# -*- mode: ruby -*-
# vi: set ft=ruby et ts=2 sts=2 sw=2 :

nodes = [
  { :hostname => "centos" + ENV['VERS'], :box => "centos/" + ENV['VERS'] },
  { :hostname => "centos" + ENV['VERS'], :box => "centos/" + ENV['VERS'] },
  { :hostname => "fedora" + ENV['VERS'], :box => "fedora/" + ENV['VERS'] + "-cloud-base" },
]

Vagrant.configure("2") do |config|
  nodes.each do |node|
    config.vm.define node[:hostname] do |nodeconfig|
      nodeconfig.vm.box = node[:box]
      nodeconfig.vm.hostname = node[:hostname]

      nodeconfig.vm.synced_folder '.', '/vagrant', disabled: true

      nodeconfig.vm.provider :libvirt do |lv|
          # change cpu mode to passthrough as workaround for problems in the ci,
          # refer to bugs:
          # https://bugzilla.redhat.com/show_bug.cgi?id=1467599
          # https://bugzilla.redhat.com/show_bug.cgi?id=1386223#c10
          # vagrant-libvirt/vagrant-libvirt#667
          # taken from:
          # https://github.com/heketi/heketi/pull/1008
          lv.cpu_mode = 'host-passthrough'
          # default memory of 512MB is not sufficient for Fedora boxes as we
          # always perform complete update to the system after it is up
          lv.memory = 1024
      end # lv


      # Run a no-op playbook to create the inventory file.
      # Based on that, one can run ansible without vagrant.
      nodeconfig.vm.provision "no-op", type:'ansible' do |ansible|
        ansible.playbook = "no-op-playbook.yml"
      end

    end # nodeconfig
  end # node
end # config
